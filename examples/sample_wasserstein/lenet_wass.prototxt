name: "LeNet"
layer {
  name: "sample"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "examples/sample_wasserstein/sample_data_list.txt"
    batch_size: 50
  }
}
layer {
  name: "sample"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "examples/sample_wasserstein/sample_data_list.txt"
    batch_size: 50
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}

layer {
  name: "pred"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pred1"
  type: "Softmax"
  bottom: "ip3"
  top: "pred"
}
layer {
  name: "loss"
  type: "WassersteinLoss"
  bottom: "pred"
  bottom: "label"
  top: "loss"
  wasserstein_param {
    lambda: 0.1
    sinkhorn_iter: 10
    source: "examples/sample_wasserstein/sample_dist_mat.h5"
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "pred"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

